
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.37/modules/angular2/src/core/compiler/element_ref.ts#L3-L62">angular2/src/core/compiler/element_ref.ts (line 3)</a>

:markdown
  An opaque reference to the underlying element.
  
  The underlying native element is a DOM Element in a browser context, but may represent other
  types on other rendering platforms. In the browser the `ElementRef` can be sent to the Web
  Worker. Web Workers can not have references to the DOM Elements.
  
  
.l-main-section
  h2 Members
  .l-sub-section
    h3#constructor constructor

    
    pre.prettyprint
      code.
        constructor(parentView: ViewRef, boundElementIndex: number, renderBoundElementIndex: number, _renderer: Renderer)
    
    :markdown




  .l-sub-section
    h3#parentView parentView

    
    :markdown
      Reference to the <a href='ViewRef-interface.html'><code>ViewRef</code></a> where the `ElementRef` is inside of.
      
      





  .l-sub-section
    h3#boundElementIndex boundElementIndex

    
    :markdown
      Index of the element inside the <a href='ViewRef-interface.html'><code>ViewRef</code></a>.
      
      This is used internally by the Angular framework to locate elements.
      
      





  .l-sub-section
    h3#renderBoundElementIndex renderBoundElementIndex

    
    :markdown
      Index of the element inside the `RenderViewRef`.
      
      This is used internally by the Angular framework to locate elements.
      
      





  .l-sub-section
    h3#renderView renderView

    
    :markdown





  .l-sub-section
    h3#nativeElement nativeElement

    
    :markdown
      Returns the native Element implementation.
      
      In the browser this represents the DOM element.
      
      The `nativeElement` can be used as an escape hatch when direct DOM manipulation is needed. Use
      this with caution, as it creates tight coupling between your application and the browser, which
      will not work in Web Workers.
      
      NOTE: This method will return null in the webworker scenario!
      
      




