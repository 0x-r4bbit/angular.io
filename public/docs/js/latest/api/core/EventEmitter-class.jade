
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.37/modules/angular2/src/core/facade/async.ts#L91-L147">angular2/src/core/facade/async.ts (line 91)</a>

:markdown
  Use by directives and components to emit custom <a href='Event-var.html'><code>Event</code></a>s.
  
  ## Examples
  
  In the following example, `Zippy` alternatively emits `open` and `close` events when its
  title gets clicked:
  
  ```
  @Component({selector: 'zippy'})
  @View({template: `
    <div class="zippy">
      <div (click)="toggle()">Toggle</div>
      <div [hidden]="!visible">
        <ng-content></ng-content>
      </div>
   </div>`})
  export class Zippy {
    visible: boolean = true;
    @Event() open: EventEmitter = new EventEmitter();
    @Event() close: EventEmitter = new EventEmitter();
  
    toggle() {
      this.visible = !this.visible;
      if (this.visible) {
        this.open.next(null);
      } else {
        this.close.next(null);
      }
    }
  }
  ```
  
  Use Rx.Observable but provides an adapter to make it work as specified here:
  https://github.com/jhusain/observable-spec
  
  Once a reference implementation of the spec is available, switch to it.
  
  
.l-main-section
  h2 Members
  .l-sub-section
    h3#observer observer

    
    pre.prettyprint
      code.
        observer(generator: any)
    
    :markdown





  .l-sub-section
    h3#toRx toRx

    
    pre.prettyprint
      code.
        toRx()
    
    :markdown





  .l-sub-section
    h3#next next

    
    pre.prettyprint
      code.
        next(value: any)
    
    :markdown





  .l-sub-section
    h3#throw throw

    
    pre.prettyprint
      code.
        throw(error: any)
    
    :markdown





  .l-sub-section
    h3#return return

    
    pre.prettyprint
      code.
        return(value?: any)
    
    :markdown




