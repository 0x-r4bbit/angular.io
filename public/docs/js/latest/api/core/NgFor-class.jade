
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.37/modules/angular2/src/core/directives/ng_for.ts#L9-L126">angular2/src/core/directives/ng_for.ts (line 9)</a>

:markdown
  The `NgFor` directive instantiates a template once per item from an iterable. The context for
  each instantiated template inherits from the outer context with the given loop variable set
  to the current item from the iterable.
  
  It is possible to alias the `index` to a local variable that will be set to the current loop
  iteration in the template context, and also to alias the 'last' to a local variable that will
  be set to a boolean indicating if the item is the last one in the iteration
  
  When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:
  
  * When an item is added, a new instance of the template is added to the DOM.
  * When an item is removed, its template instance is removed from the DOM.
  * When items are reordered, their respective templates are reordered in the DOM.
  
  # Example
  
  ```
  <ul>
    <li *ng-for="#error of errors; #i = index">
      Error {{i}} of {{errors.length}}: {{error.message}}
    </li>
  </ul>
  ```
  
  # Syntax
  
  - `<li *ng-for="#item of items; #i = index">...</li>`
  - `<li template="ng-for #item of items; #i = index">...</li>`
  - `<template ng-for #item [ng-for-of]="items" #i="index"><li>...</li></template>`
  
  

.l-main-section
  h2 Annotations
  .l-sub-section
    h3.annotation Directive
    pre.prettyprint
      code.
        @Directive({selector: &#39;[ng-for][ng-for-of]&#39;, properties: [&#39;ngForOf&#39;]})


.l-main-section
  h2 Members
  .l-sub-section
    h3#constructor constructor

    
    pre.prettyprint
      code.
        constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef, _iterableDiffers: IterableDiffers, _cdr: ChangeDetectorRef)
    
    :markdown




  .l-sub-section
    h3#ngForOf ngForOf

    
    :markdown





  .l-sub-section
    h3#doCheck doCheck

    
    pre.prettyprint
      code.
        doCheck()
    
    :markdown




