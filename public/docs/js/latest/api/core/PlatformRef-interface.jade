
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.37/modules/angular2/src/core/application_ref.ts#L152-L242">angular2/src/core/application_ref.ts (line 152)</a>

:markdown
  Represent the Angular context on a page, and is a true singleton.
  
  The platform <a href='Injector-class.html'><code>Injector</code></a> injects dependencies which are also
  truly singletons in the context of a page (such as the browser's
  cookie jar).
  
  
.l-main-section
  h2 Members
  .l-sub-section
    h3#injector injector

    
    :markdown
      Get the platform <a href='Injector-class.html'><code>Injector</code></a>.
      
      





  .l-sub-section
    h3#application application

    
    pre.prettyprint
      code.
        application(bindings: Array&lt;Type | Binding | any[]&gt;)
    
    :markdown
      Build a new Angular application with the given bindings. The `ApplicationRef`
      returned can be used to bootstrap one or more root components within the
      application.
      
      





  .l-sub-section
    h3#asyncApplication asyncApplication

    
    pre.prettyprint
      code.
        asyncApplication(bindingFn: (zone: NgZone) =&gt;
                               Promise&lt;Array&lt;Type | Binding | any[]&gt;&gt;)
    
    :markdown
      Build a new Angular application from asynchronously provided bindings.
      
      Runs the `AsyncLoader` callback in the application `Zone` and constructs
      a new Application from the bindings provided by the `Promise` it returns.
      
      





  .l-sub-section
    h3#dispose dispose

    
    pre.prettyprint
      code.
        dispose()
    
    :markdown
      Destroy the Angular platform and all Angular applications on the page.
      
      




