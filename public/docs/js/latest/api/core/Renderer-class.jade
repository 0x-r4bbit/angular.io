
p.location-badge.
  exported from <a href='../core'>angular2/core</a>
  defined in <a href="https://github.com/angular/angular/tree/2.0.0-alpha.37/modules/angular2/src/core/render/api.ts#L452-L553">angular2/src/core/render/api.ts (line 452)</a>

:markdown
.l-main-section
  h2 Members
  .l-sub-section
    h3#createRootHostView createRootHostView

    
    pre.prettyprint
      code.
        createRootHostView(hostProtoViewRef: RenderProtoViewRef, fragmentCount: number, hostElementSelector: string)
    
    :markdown
      Creates a root host view that includes the given element.
      Note that the fragmentCount needs to be passed in so that we can create a result
      synchronously even when dealing with webworkers!
      





  .l-sub-section
    h3#createView createView

    
    pre.prettyprint
      code.
        createView(protoViewRef: RenderProtoViewRef, fragmentCount: number)
    
    :markdown
      Creates a regular view out of the given ProtoView.
      Note that the fragmentCount needs to be passed in so that we can create a result
      synchronously even when dealing with webworkers!
      
      





  .l-sub-section
    h3#destroyView destroyView

    
    pre.prettyprint
      code.
        destroyView(viewRef: RenderViewRef)
    
    :markdown
      Destroys the given view after it has been dehydrated and detached
      
      





  .l-sub-section
    h3#attachFragmentAfterFragment attachFragmentAfterFragment

    
    pre.prettyprint
      code.
        attachFragmentAfterFragment(previousFragmentRef: RenderFragmentRef, fragmentRef: RenderFragmentRef)
    
    :markdown
      Attaches a fragment after another fragment.
      
      





  .l-sub-section
    h3#attachFragmentAfterElement attachFragmentAfterElement

    
    pre.prettyprint
      code.
        attachFragmentAfterElement(elementRef: RenderElementRef, fragmentRef: RenderFragmentRef)
    
    :markdown
      Attaches a fragment after an element.
      
      





  .l-sub-section
    h3#detachFragment detachFragment

    
    pre.prettyprint
      code.
        detachFragment(fragmentRef: RenderFragmentRef)
    
    :markdown
      Detaches a fragment.
      
      





  .l-sub-section
    h3#hydrateView hydrateView

    
    pre.prettyprint
      code.
        hydrateView(viewRef: RenderViewRef)
    
    :markdown
      Hydrates a view after it has been attached. Hydration/dehydration is used for reusing views
      inside of the view pool.
      
      





  .l-sub-section
    h3#dehydrateView dehydrateView

    
    pre.prettyprint
      code.
        dehydrateView(viewRef: RenderViewRef)
    
    :markdown
      Dehydrates a view after it has been attached. Hydration/dehydration is used for reusing views
      inside of the view pool.
      
      





  .l-sub-section
    h3#getNativeElementSync getNativeElementSync

    
    pre.prettyprint
      code.
        getNativeElementSync(location: RenderElementRef)
    
    :markdown
      Returns the native element at the given location.
      Attention: In a WebWorker scenario, this should always return null!
      
      





  .l-sub-section
    h3#setElementProperty setElementProperty

    
    pre.prettyprint
      code.
        setElementProperty(location: RenderElementRef, propertyName: string, propertyValue: any)
    
    :markdown
      Sets a property on an element.
      
      





  .l-sub-section
    h3#setElementAttribute setElementAttribute

    
    pre.prettyprint
      code.
        setElementAttribute(location: RenderElementRef, attributeName: string, attributeValue: string)
    
    :markdown
      Sets an attribute on an element.
      
      





  .l-sub-section
    h3#setElementClass setElementClass

    
    pre.prettyprint
      code.
        setElementClass(location: RenderElementRef, className: string, isAdd: boolean)
    
    :markdown
      Sets a class on an element.
      
      





  .l-sub-section
    h3#setElementStyle setElementStyle

    
    pre.prettyprint
      code.
        setElementStyle(location: RenderElementRef, styleName: string, styleValue: string)
    
    :markdown
      Sets a style on an element.
      
      





  .l-sub-section
    h3#invokeElementMethod invokeElementMethod

    
    pre.prettyprint
      code.
        invokeElementMethod(location: RenderElementRef, methodName: string, args: any[])
    
    :markdown
      Calls a method on an element.
      
      





  .l-sub-section
    h3#setText setText

    
    pre.prettyprint
      code.
        setText(viewRef: RenderViewRef, textNodeIndex: number, text: string)
    
    :markdown
      Sets the value of a text node.
      
      





  .l-sub-section
    h3#setEventDispatcher setEventDispatcher

    
    pre.prettyprint
      code.
        setEventDispatcher(viewRef: RenderViewRef, dispatcher: RenderEventDispatcher)
    
    :markdown
      Sets the dispatcher for all events of the given view
      
      




