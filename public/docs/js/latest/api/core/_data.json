{
  "index" : {
    "title" : "Core",
    "intro" : "Starting point to import all public core APIs.",
    "docType": "module"
  },

  "APP_COMPONENT-const" : {
    "title" : "APP_COMPONENT",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/application_tokens",
    "docType": "const"
  },

  "APP_ID-const" : {
    "title" : "APP_ID",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/render/dom/dom_tokens",
    "docType": "const"
  },

  "AbstractBindingError-class" : {
    "title" : "AbstractBindingError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "AbstractControl-class" : {
    "title" : "AbstractControl",
    "originalModule" : "angular2/src/core/forms/model",
    "docType": "class"
  },

  "AbstractControlDirective-class" : {
    "title" : "AbstractControlDirective",
    "originalModule" : "angular2/src/core/forms/directives/abstract_control_directive",
    "docType": "class"
  },

  "AfterContentChecked-interface" : {
    "title" : "AfterContentChecked",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "AfterContentInit-interface" : {
    "title" : "AfterContentInit",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "AfterViewChecked-interface" : {
    "title" : "AfterViewChecked",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "AfterViewInit-interface" : {
    "title" : "AfterViewInit",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "AppRootUrl-class" : {
    "title" : "AppRootUrl",
    "originalModule" : "angular2/src/core/services/app_root_url",
    "docType": "class"
  },

  "AppViewManager-interface" : {
    "title" : "AppViewManager",
    "originalModule" : "angular2/src/core/compiler/view_manager",
    "docType": "interface"
  },

  "ApplicationRef-interface" : {
    "title" : "ApplicationRef",
    "originalModule" : "angular2/src/core/application_ref",
    "docType": "interface"
  },

  "AsyncPipe-class" : {
    "title" : "AsyncPipe",
    "originalModule" : "angular2/src/core/pipes/async_pipe",
    "docType": "class"
  },

  "Attribute-var" : {
    "title" : "Attribute",
    "varType" : "AttributeFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "AttributeFactory-interface" : {
    "title" : "AttributeFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "AttributeMetadata-class" : {
    "title" : "AttributeMetadata",
    "originalModule" : "angular2/src/core/metadata/di",
    "docType": "class"
  },

  "Binding-class" : {
    "title" : "Binding",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "class"
  },

  "BindingBuilder-class" : {
    "title" : "BindingBuilder",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "class"
  },

  "BindingWithVisibility-class" : {
    "title" : "BindingWithVisibility",
    "originalModule" : "angular2/src/core/di/injector",
    "docType": "class"
  },

  "By-class" : {
    "title" : "By",
    "originalModule" : "angular2/src/core/debug/debug_element",
    "docType": "class"
  },

  "CORE_DIRECTIVES-const" : {
    "title" : "CORE_DIRECTIVES",
    "originalModule" : "angular2/src/core/directives",
    "docType": "const"
  },

  "ChangeDetectionError-class" : {
    "title" : "ChangeDetectionError",
    "originalModule" : "angular2/src/core/change_detection/exceptions",
    "docType": "class"
  },

  "ChangeDetectionStrategy-enum" : {
    "title" : "ChangeDetectionStrategy",
    "originalModule" : "angular2/src/core/change_detection/constants",
    "docType": "enum"
  },

  "ChangeDetector-interface" : {
    "title" : "ChangeDetector",
    "originalModule" : "angular2/src/core/change_detection/interfaces",
    "docType": "interface"
  },

  "ChangeDetectorRef-interface" : {
    "title" : "ChangeDetectorRef",
    "originalModule" : "angular2/src/core/change_detection/change_detector_ref",
    "docType": "interface"
  },

  "CheckboxControlValueAccessor-class" : {
    "title" : "CheckboxControlValueAccessor",
    "originalModule" : "angular2/src/core/forms/directives/checkbox_value_accessor",
    "docType": "class"
  },

  "Class-function" : {
    "title" : "Class",
    "originalModule" : "angular2/src/core/util/decorators",
    "docType": "function"
  },

  "ClassDefinition-interface" : {
    "title" : "ClassDefinition",
    "originalModule" : "angular2/src/core/util/decorators",
    "docType": "interface"
  },

  "Compiler-interface" : {
    "title" : "Compiler",
    "originalModule" : "angular2/src/core/compiler/compiler",
    "docType": "interface"
  },

  "Component-var" : {
    "title" : "Component",
    "varType" : "ComponentFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "ComponentDecorator-interface" : {
    "title" : "ComponentDecorator",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "ComponentFactory-interface" : {
    "title" : "ComponentFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "ComponentMetadata-class" : {
    "title" : "ComponentMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "ComponentRef-interface" : {
    "title" : "ComponentRef",
    "originalModule" : "angular2/src/core/compiler/dynamic_component_loader",
    "docType": "interface"
  },

  "ComponentUrlMapper-class" : {
    "title" : "ComponentUrlMapper",
    "originalModule" : "angular2/src/core/compiler/component_url_mapper",
    "docType": "class"
  },

  "Control-class" : {
    "title" : "Control",
    "originalModule" : "angular2/src/core/forms/model",
    "docType": "class"
  },

  "ControlArray-class" : {
    "title" : "ControlArray",
    "originalModule" : "angular2/src/core/forms/model",
    "docType": "class"
  },

  "ControlContainer-class" : {
    "title" : "ControlContainer",
    "originalModule" : "angular2/src/core/forms/directives/control_container",
    "docType": "class"
  },

  "ControlGroup-class" : {
    "title" : "ControlGroup",
    "originalModule" : "angular2/src/core/forms/model",
    "docType": "class"
  },

  "ControlValueAccessor-interface" : {
    "title" : "ControlValueAccessor",
    "originalModule" : "angular2/src/core/forms/directives/control_value_accessor",
    "docType": "interface"
  },

  "CurrencyPipe-class" : {
    "title" : "CurrencyPipe",
    "originalModule" : "angular2/src/core/pipes/number_pipe",
    "docType": "class"
  },

  "CyclicDependencyError-class" : {
    "title" : "CyclicDependencyError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "DEFAULT_PIPES-const" : {
    "title" : "DEFAULT_PIPES",
    "varType" : "Binding",
    "originalModule" : "angular2/src/core/pipes/default_pipes",
    "docType": "const"
  },

  "DEFAULT_PIPES_TOKEN-const" : {
    "title" : "DEFAULT_PIPES_TOKEN",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/pipes/default_pipes",
    "docType": "const"
  },

  "DOCUMENT-const" : {
    "title" : "DOCUMENT",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/render/dom/dom_tokens",
    "docType": "const"
  },

  "DatePipe-class" : {
    "title" : "DatePipe",
    "originalModule" : "angular2/src/core/pipes/date_pipe",
    "docType": "class"
  },

  "DebugElement-interface" : {
    "title" : "DebugElement",
    "originalModule" : "angular2/src/core/debug/debug_element",
    "docType": "interface"
  },

  "DecimalPipe-class" : {
    "title" : "DecimalPipe",
    "originalModule" : "angular2/src/core/pipes/number_pipe",
    "docType": "class"
  },

  "DefaultValidators-class" : {
    "title" : "DefaultValidators",
    "originalModule" : "angular2/src/core/forms/directives/validators",
    "docType": "class"
  },

  "DefaultValueAccessor-class" : {
    "title" : "DefaultValueAccessor",
    "originalModule" : "angular2/src/core/forms/directives/default_value_accessor",
    "docType": "class"
  },

  "Dependency-class" : {
    "title" : "Dependency",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "class"
  },

  "DependencyMetadata-class" : {
    "title" : "DependencyMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "DependencyProvider-interface" : {
    "title" : "DependencyProvider",
    "originalModule" : "angular2/src/core/di/injector",
    "docType": "interface"
  },

  "Directive-var" : {
    "title" : "Directive",
    "varType" : "DirectiveFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "DirectiveDecorator-interface" : {
    "title" : "DirectiveDecorator",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "DirectiveFactory-interface" : {
    "title" : "DirectiveFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "DirectiveMetadata-class" : {
    "title" : "DirectiveMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "DirectiveResolver-class" : {
    "title" : "DirectiveResolver",
    "originalModule" : "angular2/src/core/compiler/directive_resolver",
    "docType": "class"
  },

  "DoCheck-interface" : {
    "title" : "DoCheck",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "DynamicComponentLoader-class" : {
    "title" : "DynamicComponentLoader",
    "originalModule" : "angular2/src/core/compiler/dynamic_component_loader",
    "docType": "class"
  },

  "ELEMENT_PROBE_BINDINGS-const" : {
    "title" : "ELEMENT_PROBE_BINDINGS",
    "originalModule" : "angular2/src/core/debug/debug_element_view_listener",
    "docType": "const"
  },

  "ElementRef-class" : {
    "title" : "ElementRef",
    "originalModule" : "angular2/src/core/compiler/element_ref",
    "docType": "class"
  },

  "Event-var" : {
    "title" : "Event",
    "varType" : "EventFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "EventEmitter-class" : {
    "title" : "EventEmitter",
    "originalModule" : "angular2/src/core/facade/async",
    "docType": "class"
  },

  "EventFactory-interface" : {
    "title" : "EventFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "EventMetadata-class" : {
    "title" : "EventMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "ExpressionChangedAfterItHasBeenCheckedException-class" : {
    "title" : "ExpressionChangedAfterItHasBeenCheckedException",
    "originalModule" : "angular2/src/core/change_detection/exceptions",
    "docType": "class"
  },

  "FORM_BINDINGS-const" : {
    "title" : "FORM_BINDINGS",
    "originalModule" : "angular2/src/core/forms",
    "docType": "const"
  },

  "FORM_DIRECTIVES-const" : {
    "title" : "FORM_DIRECTIVES",
    "originalModule" : "angular2/src/core/forms/directives",
    "docType": "const"
  },

  "Form-interface" : {
    "title" : "Form",
    "originalModule" : "angular2/src/core/forms/directives/form_interface",
    "docType": "interface"
  },

  "FormBuilder-class" : {
    "title" : "FormBuilder",
    "originalModule" : "angular2/src/core/forms/form_builder",
    "docType": "class"
  },

  "ForwardRefFn-interface" : {
    "title" : "ForwardRefFn",
    "originalModule" : "angular2/src/core/di/forward_ref",
    "docType": "interface"
  },

  "Host-var" : {
    "title" : "Host",
    "varType" : "HostFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "HostBinding-var" : {
    "title" : "HostBinding",
    "varType" : "HostBindingFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "HostBindingFactory-interface" : {
    "title" : "HostBindingFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "HostBindingMetadata-class" : {
    "title" : "HostBindingMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "HostFactory-interface" : {
    "title" : "HostFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "HostListener-var" : {
    "title" : "HostListener",
    "varType" : "HostListenerFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "HostListenerFactory-interface" : {
    "title" : "HostListenerFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "HostListenerMetadata-class" : {
    "title" : "HostListenerMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "HostMetadata-class" : {
    "title" : "HostMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "HostViewRef-interface" : {
    "title" : "HostViewRef",
    "originalModule" : "angular2/src/core/compiler/view_ref",
    "docType": "interface"
  },

  "Inject-var" : {
    "title" : "Inject",
    "varType" : "InjectFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "InjectFactory-interface" : {
    "title" : "InjectFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "InjectMetadata-class" : {
    "title" : "InjectMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "Injectable-var" : {
    "title" : "Injectable",
    "varType" : "InjectableFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "InjectableFactory-interface" : {
    "title" : "InjectableFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "InjectableMetadata-class" : {
    "title" : "InjectableMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "Injector-class" : {
    "title" : "Injector",
    "originalModule" : "angular2/src/core/di/injector",
    "docType": "class"
  },

  "InstantiationError-class" : {
    "title" : "InstantiationError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "InvalidBindingError-class" : {
    "title" : "InvalidBindingError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "IterableDiffer-interface" : {
    "title" : "IterableDiffer",
    "originalModule" : "angular2/src/core/change_detection/differs/iterable_differs",
    "docType": "interface"
  },

  "IterableDifferFactory-interface" : {
    "title" : "IterableDifferFactory",
    "originalModule" : "angular2/src/core/change_detection/differs/iterable_differs",
    "docType": "interface"
  },

  "IterableDiffers-class" : {
    "title" : "IterableDiffers",
    "originalModule" : "angular2/src/core/change_detection/differs/iterable_differs",
    "docType": "class"
  },

  "JsonPipe-class" : {
    "title" : "JsonPipe",
    "originalModule" : "angular2/src/core/pipes/json_pipe",
    "docType": "class"
  },

  "Key-class" : {
    "title" : "Key",
    "originalModule" : "angular2/src/core/di/key",
    "docType": "class"
  },

  "KeyRegistry-class" : {
    "title" : "KeyRegistry",
    "originalModule" : "angular2/src/core/di/key",
    "docType": "class"
  },

  "KeyValueDiffer-interface" : {
    "title" : "KeyValueDiffer",
    "originalModule" : "angular2/src/core/change_detection/differs/keyvalue_differs",
    "docType": "interface"
  },

  "KeyValueDifferFactory-interface" : {
    "title" : "KeyValueDifferFactory",
    "originalModule" : "angular2/src/core/change_detection/differs/keyvalue_differs",
    "docType": "interface"
  },

  "KeyValueDiffers-class" : {
    "title" : "KeyValueDiffers",
    "originalModule" : "angular2/src/core/change_detection/differs/keyvalue_differs",
    "docType": "class"
  },

  "LifeCycle-class" : {
    "title" : "LifeCycle",
    "originalModule" : "angular2/src/core/life_cycle/life_cycle",
    "docType": "class"
  },

  "Locals-class" : {
    "title" : "Locals",
    "originalModule" : "angular2/src/core/change_detection/parser/locals",
    "docType": "class"
  },

  "LowerCasePipe-class" : {
    "title" : "LowerCasePipe",
    "originalModule" : "angular2/src/core/pipes/lowercase_pipe",
    "docType": "class"
  },

  "MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE-const" : {
    "title" : "MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/render/dom/dom_tokens",
    "docType": "const"
  },

  "NG_VALIDATORS-const" : {
    "title" : "NG_VALIDATORS",
    "varType" : "OpaqueToken",
    "originalModule" : "angular2/src/core/forms/validators",
    "docType": "const"
  },

  "NgClass-class" : {
    "title" : "NgClass",
    "originalModule" : "angular2/src/core/directives/ng_class",
    "docType": "class"
  },

  "NgControl-class" : {
    "title" : "NgControl",
    "originalModule" : "angular2/src/core/forms/directives/ng_control",
    "docType": "class"
  },

  "NgControlGroup-class" : {
    "title" : "NgControlGroup",
    "originalModule" : "angular2/src/core/forms/directives/ng_control_group",
    "docType": "class"
  },

  "NgControlName-class" : {
    "title" : "NgControlName",
    "originalModule" : "angular2/src/core/forms/directives/ng_control_name",
    "docType": "class"
  },

  "NgFor-class" : {
    "title" : "NgFor",
    "originalModule" : "angular2/src/core/directives/ng_for",
    "docType": "class"
  },

  "NgForm-class" : {
    "title" : "NgForm",
    "originalModule" : "angular2/src/core/forms/directives/ng_form",
    "docType": "class"
  },

  "NgFormControl-class" : {
    "title" : "NgFormControl",
    "originalModule" : "angular2/src/core/forms/directives/ng_form_control",
    "docType": "class"
  },

  "NgFormModel-class" : {
    "title" : "NgFormModel",
    "originalModule" : "angular2/src/core/forms/directives/ng_form_model",
    "docType": "class"
  },

  "NgIf-class" : {
    "title" : "NgIf",
    "originalModule" : "angular2/src/core/directives/ng_if",
    "docType": "class"
  },

  "NgModel-class" : {
    "title" : "NgModel",
    "originalModule" : "angular2/src/core/forms/directives/ng_model",
    "docType": "class"
  },

  "NgNonBindable-class" : {
    "title" : "NgNonBindable",
    "originalModule" : "angular2/src/core/directives/ng_non_bindable",
    "docType": "class"
  },

  "NgSelectOption-class" : {
    "title" : "NgSelectOption",
    "originalModule" : "angular2/src/core/forms/directives/select_control_value_accessor",
    "docType": "class"
  },

  "NgStyle-class" : {
    "title" : "NgStyle",
    "originalModule" : "angular2/src/core/directives/ng_style",
    "docType": "class"
  },

  "NgSwitch-class" : {
    "title" : "NgSwitch",
    "originalModule" : "angular2/src/core/directives/ng_switch",
    "docType": "class"
  },

  "NgSwitchDefault-class" : {
    "title" : "NgSwitchDefault",
    "originalModule" : "angular2/src/core/directives/ng_switch",
    "docType": "class"
  },

  "NgSwitchWhen-class" : {
    "title" : "NgSwitchWhen",
    "originalModule" : "angular2/src/core/directives/ng_switch",
    "docType": "class"
  },

  "NgZone-interface" : {
    "title" : "NgZone",
    "originalModule" : "angular2/src/core/zone/ng_zone",
    "docType": "interface"
  },

  "NoAnnotationError-class" : {
    "title" : "NoAnnotationError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "NoBindingError-class" : {
    "title" : "NoBindingError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "NumberPipe-class" : {
    "title" : "NumberPipe",
    "originalModule" : "angular2/src/core/pipes/number_pipe",
    "docType": "class"
  },

  "Observable-class" : {
    "title" : "Observable",
    "originalModule" : "angular2/src/core/facade/async",
    "docType": "class"
  },

  "OnChanges-interface" : {
    "title" : "OnChanges",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "OnDestroy-interface" : {
    "title" : "OnDestroy",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "OnInit-interface" : {
    "title" : "OnInit",
    "originalModule" : "angular2/src/core/compiler/interfaces",
    "docType": "interface"
  },

  "OpaqueToken-class" : {
    "title" : "OpaqueToken",
    "originalModule" : "angular2/src/core/di/opaque_token",
    "docType": "class"
  },

  "Optional-var" : {
    "title" : "Optional",
    "varType" : "OptionalFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "OptionalFactory-interface" : {
    "title" : "OptionalFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "OptionalMetadata-class" : {
    "title" : "OptionalMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "OutOfBoundsError-class" : {
    "title" : "OutOfBoundsError",
    "originalModule" : "angular2/src/core/di/exceptions",
    "docType": "class"
  },

  "PercentPipe-class" : {
    "title" : "PercentPipe",
    "originalModule" : "angular2/src/core/pipes/number_pipe",
    "docType": "class"
  },

  "Pipe-var" : {
    "title" : "Pipe",
    "varType" : "PipeFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "PipeFactory-interface" : {
    "title" : "PipeFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "PipeMetadata-class" : {
    "title" : "PipeMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "PipeOnDestroy-interface" : {
    "title" : "PipeOnDestroy",
    "originalModule" : "angular2/src/core/change_detection/pipe_transform",
    "docType": "interface"
  },

  "PipeTransform-interface" : {
    "title" : "PipeTransform",
    "originalModule" : "angular2/src/core/change_detection/pipe_transform",
    "docType": "interface"
  },

  "PlatformRef-interface" : {
    "title" : "PlatformRef",
    "originalModule" : "angular2/src/core/application_ref",
    "docType": "interface"
  },

  "Predicate-interface" : {
    "title" : "Predicate",
    "originalModule" : "angular2/src/core/facade/collection",
    "docType": "interface"
  },

  "Property-var" : {
    "title" : "Property",
    "varType" : "PropertyFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "PropertyFactory-interface" : {
    "title" : "PropertyFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "PropertyMetadata-class" : {
    "title" : "PropertyMetadata",
    "originalModule" : "angular2/src/core/metadata/directives",
    "docType": "class"
  },

  "ProtoInjector-class" : {
    "title" : "ProtoInjector",
    "originalModule" : "angular2/src/core/di/injector",
    "docType": "class"
  },

  "ProtoViewRef-interface" : {
    "title" : "ProtoViewRef",
    "originalModule" : "angular2/src/core/compiler/view_ref",
    "docType": "interface"
  },

  "Query-var" : {
    "title" : "Query",
    "varType" : "QueryFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "QueryFactory-interface" : {
    "title" : "QueryFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "QueryList-class" : {
    "title" : "QueryList",
    "originalModule" : "angular2/src/core/compiler/query_list",
    "docType": "class"
  },

  "QueryMetadata-class" : {
    "title" : "QueryMetadata",
    "originalModule" : "angular2/src/core/metadata/di",
    "docType": "class"
  },

  "RenderDirectiveMetadata-class" : {
    "title" : "RenderDirectiveMetadata",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "RenderElementRef-interface" : {
    "title" : "RenderElementRef",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "interface"
  },

  "RenderEventDispatcher-interface" : {
    "title" : "RenderEventDispatcher",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "interface"
  },

  "RenderFragmentRef-class" : {
    "title" : "RenderFragmentRef",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "RenderProtoViewRef-class" : {
    "title" : "RenderProtoViewRef",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "RenderViewRef-class" : {
    "title" : "RenderViewRef",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "RenderViewWithFragments-class" : {
    "title" : "RenderViewWithFragments",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "Renderer-class" : {
    "title" : "Renderer",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "ResolvedBinding-class" : {
    "title" : "ResolvedBinding",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "class"
  },

  "ResolvedFactory-class" : {
    "title" : "ResolvedFactory",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "class"
  },

  "Scope-class" : {
    "title" : "Scope",
    "originalModule" : "angular2/src/core/debug/debug_element",
    "docType": "class"
  },

  "SelectControlValueAccessor-class" : {
    "title" : "SelectControlValueAccessor",
    "originalModule" : "angular2/src/core/forms/directives/select_control_value_accessor",
    "docType": "class"
  },

  "Self-var" : {
    "title" : "Self",
    "varType" : "SelfFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "SelfFactory-interface" : {
    "title" : "SelfFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "SelfMetadata-class" : {
    "title" : "SelfMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "SkipSelf-var" : {
    "title" : "SkipSelf",
    "varType" : "SkipSelfFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "var"
  },

  "SkipSelfFactory-interface" : {
    "title" : "SkipSelfFactory",
    "originalModule" : "angular2/src/core/di/decorators",
    "docType": "interface"
  },

  "SkipSelfMetadata-class" : {
    "title" : "SkipSelfMetadata",
    "originalModule" : "angular2/src/core/di/metadata",
    "docType": "class"
  },

  "SlicePipe-class" : {
    "title" : "SlicePipe",
    "originalModule" : "angular2/src/core/pipes/slice_pipe",
    "docType": "class"
  },

  "SwitchView-class" : {
    "title" : "SwitchView",
    "originalModule" : "angular2/src/core/directives/ng_switch",
    "docType": "class"
  },

  "TemplateRef-class" : {
    "title" : "TemplateRef",
    "originalModule" : "angular2/src/core/compiler/template_ref",
    "docType": "class"
  },

  "Type-interface" : {
    "title" : "Type",
    "originalModule" : "angular2/src/core/facade/lang",
    "docType": "interface"
  },

  "TypeDecorator-interface" : {
    "title" : "TypeDecorator",
    "originalModule" : "angular2/src/core/util/decorators",
    "docType": "interface"
  },

  "TypeLiteral-class" : {
    "title" : "TypeLiteral",
    "originalModule" : "angular2/src/core/di/type_literal",
    "docType": "class"
  },

  "UpperCasePipe-class" : {
    "title" : "UpperCasePipe",
    "originalModule" : "angular2/src/core/pipes/uppercase_pipe",
    "docType": "class"
  },

  "UrlResolver-class" : {
    "title" : "UrlResolver",
    "originalModule" : "angular2/src/core/services/url_resolver",
    "docType": "class"
  },

  "Validators-class" : {
    "title" : "Validators",
    "originalModule" : "angular2/src/core/forms/validators",
    "docType": "class"
  },

  "View-var" : {
    "title" : "View",
    "varType" : "ViewFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "ViewContainerRef-interface" : {
    "title" : "ViewContainerRef",
    "originalModule" : "angular2/src/core/compiler/view_container_ref",
    "docType": "interface"
  },

  "ViewDecorator-interface" : {
    "title" : "ViewDecorator",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "ViewDefinition-class" : {
    "title" : "ViewDefinition",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "class"
  },

  "ViewEncapsulation-enum" : {
    "title" : "ViewEncapsulation",
    "originalModule" : "angular2/src/core/render/api",
    "docType": "enum"
  },

  "ViewFactory-interface" : {
    "title" : "ViewFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "interface"
  },

  "ViewMetadata-class" : {
    "title" : "ViewMetadata",
    "originalModule" : "angular2/src/core/metadata/view",
    "docType": "class"
  },

  "ViewQuery-var" : {
    "title" : "ViewQuery",
    "varType" : "QueryFactory",
    "originalModule" : "angular2/src/core/metadata",
    "docType": "var"
  },

  "ViewQueryMetadata-class" : {
    "title" : "ViewQueryMetadata",
    "originalModule" : "angular2/src/core/metadata/di",
    "docType": "class"
  },

  "ViewRef-interface" : {
    "title" : "ViewRef",
    "originalModule" : "angular2/src/core/compiler/view_ref",
    "docType": "interface"
  },

  "Visibility-enum" : {
    "title" : "Visibility",
    "originalModule" : "angular2/src/core/di/injector",
    "docType": "enum"
  },

  "WrappedException-class" : {
    "title" : "WrappedException",
    "originalModule" : "angular2/src/core/facade/exceptions",
    "docType": "class"
  },

  "WrappedValue-class" : {
    "title" : "WrappedValue",
    "originalModule" : "angular2/src/core/change_detection/change_detection_util",
    "docType": "class"
  },

  "asNativeElements-function" : {
    "title" : "asNativeElements",
    "originalModule" : "angular2/src/core/debug/debug_element",
    "docType": "function"
  },

  "bind-function" : {
    "title" : "bind",
    "originalModule" : "angular2/src/core/di/binding",
    "docType": "function"
  },

  "bootstrap-function" : {
    "title" : "bootstrap",
    "originalModule" : "angular2/src/core/application_common",
    "docType": "function"
  },

  "forwardRef-function" : {
    "title" : "forwardRef",
    "originalModule" : "angular2/src/core/di/forward_ref",
    "docType": "function"
  },

  "inspectElement-function" : {
    "title" : "inspectElement",
    "originalModule" : "angular2/src/core/debug/debug_element",
    "docType": "function"
  },

  "inspectNativeElement-function" : {
    "title" : "inspectNativeElement",
    "originalModule" : "angular2/src/core/debug/debug_element_view_listener",
    "docType": "function"
  },

  "platform-function" : {
    "title" : "platform",
    "originalModule" : "angular2/src/core/application_common",
    "docType": "function"
  },

  "resolveForwardRef-function" : {
    "title" : "resolveForwardRef",
    "originalModule" : "angular2/src/core/di/forward_ref",
    "docType": "function"
  }
}
